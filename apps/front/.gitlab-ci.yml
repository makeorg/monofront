image: makeorg/docker-arch-docker:latest

variables: &global_variables
  IMAGE_NAME: "make-front"
  IMAGE_TARGET: "app-production"
  IMAGE_PATH: "apps/front/Dockerfile"
  YARN_VERSION: "1.22.5"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ~/.cache
    - node_modules

stages:
  - check
#  - e2e
  - build
  - deploy


# e2e-app:
#  variables:
#    <<: *global_variables
#    CYPRESS_CACHE_FOLDER: '$CI_PROJECT_DIR/cache_cypress'
#  stage: e2e
#  needs: []
#  except: 
#    - production
#  image: cypress/browsers:node14.17.0-chrome91-ff89
#  before_script:
#    - export YARN_VERSION="$YARN_VERSION"
#  script:
#    - yarn install --check-files
#    - NODE_ENV=test yarn workspace @make.org/front build
#    - yarn workspace @make.org/front test:cypress:run
#  cache: {}
#  artifacts:
#    expire_in: 1 week
#    when: always
#    paths:
#      - cypress/screenshots
#      - cypress/videos
#      - cypress/coverage
  
.check:
  stage: check
  except: 
    - production
  image: "node:16.9-alpine"
  before_script: 
    - node -v
    - export YARN_VERSION="$YARN_VERSION"
    - yarn install --check-files

check:
  extends: .check
  script:    
    - yarn workspace @make.org/front translation
    - yarn workspace @make.org/front documentation

.build:
  stage: build
  tags:
    - docker
  except: 
    - production
  before_script: 
    - export IMAGE_VERSION=`git rev-parse --short=10 HEAD`
    - mkdir -p /var/lib/docker
    - mount -t tmpfs -o size=12G tmpfs /var/lib/docker
    - if [ ! -e /var/run/docker.sock ]; then DOCKER_DRIVER=overlay2 dockerd & fi
    - until docker ps; do echo "waiting for docker to be up..."; sleep 0.5; done
    - docker login "https://$NEXUS_URL" --username "$NEXUS_USER" --password "$NEXUS_PASSWORD"

build-app:
  extends: .build
  when: manual
  script:
    - echo $(docker pull $NEXUS_URL/$IMAGE_NAME:$IMAGE_VERSION)
    - >
      if [[ -z $(docker images -q $NEXUS_URL/$IMAGE_NAME:$IMAGE_VERSION) ]];then
        DOCKER_BUILDKIT=1 docker build --rm -f $IMAGE_PATH -t $NEXUS_URL/$IMAGE_NAME:$IMAGE_VERSION --target $IMAGE_TARGET .
        docker push $NEXUS_URL/$IMAGE_NAME:$IMAGE_VERSION
      fi
    - docker tag $NEXUS_URL/$IMAGE_NAME:$IMAGE_VERSION $NEXUS_URL/$IMAGE_NAME:$CI_COMMIT_REF_NAME-latest
    - docker push $NEXUS_URL/$IMAGE_NAME:$CI_COMMIT_REF_NAME-latest

.deploy-preproduction:
  stage: deploy
  environment:
    name: preproduction
  only:
    - preproduction

deploy-app-preproduction:
  extends: .deploy-preproduction
  when: manual
  script:
    - >
      curl -D - -X "POST"
      -H "Accept: application/json"
      -H "Content-Type: application/x-www-form-urlencoded"
      -H "X-Rundeck-Auth-Token: $APP_RUNDECK_PREPROD_TOKEN"
      --data-urlencode "argString=-version $CI_COMMIT_REF_NAME-latest"
      $RUNDECK_PREPROD_URL/api/16/job/$APP_RUNDECK_PREPROD_JOB_ID/run