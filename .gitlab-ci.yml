image: makeorg/docker-arch-docker:latest

variables: &global_variables
  YARN_VERSION: "1.22.5"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ~/.cache
    - node_modules

stages:
  - check
  - apps
  - merge
  
.check:
  stage: check
  except: 
    - production
  image: "node:16.9-alpine"
  before_script: 
    - node -v
    - export YARN_VERSION="$YARN_VERSION"
    - yarn install --check-files

.apps:
  stage: apps
  trigger:
      strategy: depend
  rules:
    changes:
      - api/*
      - assets/*
      - components/*
      - store/*
      - ui/*
      - utils/*

lint:
  extends: .check
  script:  
    - yarn eslint ./

check-types:
  extends: .check
  script:
    - yarn tsc --noEmit

test:
  extends: .check
  script:    
    - yarn jest --coverage
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - coverage

jscpd:
  extends: .check
  script:
    - yarn jscpd
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - reports

make-front:
  extends: .apps
  trigger:
      include: apps/front/.gitlab-ci.yml
  rules:
    - changes:
      - apps/font/*

make-widget:
  extends: .apps
  trigger:
      include: apps/widget/.gitlab-ci.yml
  rules:
    - changes:
      - apps/widget/*

merge-to-prod:
  stage: merge
  when: manual
  allow_failure: false
  script: echo "Running merge to prod..."
    # - mkdir -p ~/.ssh/
    # - chmod 700 ~/.ssh
    # - ssh-keyscan -t rsa gitlab.com > ~/.ssh/known_hosts
    # - echo "${DEPLOY_PRIVATE_KEY}" > ~/.ssh/id_rsa
    # - chmod 600 ~/.ssh/id_rsa
    # - export CI_PUSH_REPO=`echo $CI_REPOSITORY_URL | perl -pe 's#.*@(.+?(\:\d+)?)/#git@\1:#'`
    # - echo "Target repo is ${CI_PUSH_REPO}"
    # - git config --global user.email "${GITLAB_USER_EMAIL}"
    # - git config --global user.name "${GITLAB_USER_NAME}"
    # - git remote set-url origin "${CI_PUSH_REPO}"
    # - git checkout production
    # - git merge --ff-only origin/preproduction
    # - git push origin production:production