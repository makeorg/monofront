version: '3.9'

services:
  app_make_dev:
    &dev_service
    image: app_make_dev
    build:
      context: .
      dockerfile: apps/front/Dockerfile
      target: app-dev
    ports:
      - 3000:3000
      - 8888:8888
    volumes:
      &default_volumes
      - .:/home/app
      - /home/app/node_modules
      - /home/app/apps/front/node_modules
      - /home/app/apps/widget/node_modules
      - /home/app/apps/translator/node_modules
      - /home/app/apps/content/node_modules
      - /home/app/package/api/node_modules
      - /home/app/package/components/node_modules
      - /home/app/package/types/node_modules
      - /home/app/package/assets/node_modules
      - /home/app/package/utils/node_modules
      - /home/app/package/ui/node_modules
      - /home/app/package/store/node_modules
      - /home/app/package/logger/node_modules
      - /home/app/package/designsystem/node_modules
      - /home/app/apimock/node_modules
      - /home/app/apps/front/dist
      - /home/app/apps/widget/dist
      - /home/app/apps/translator/dist
      - /home/app/apps/content/dist
      - /home/app/dist
    profiles:
      - app-dev

  app_make_dev_mock:
    <<: *dev_service
    image: app_make_dev_mock
    build:
      context: .
      dockerfile: apps/front/Dockerfile
      target: app-dev-mock
    ports:
      - 3000:3000
      - 8888:8888
    volumes: *default_volumes
    profiles:
      - app-dev-mock

  app_make_ssr:
    &ssr_service
    image: app_make_ssr
    build:
      context: .
      dockerfile: apps/front/Dockerfile
      target: app-ssr
    ports:
      - 3000:3000
      - 8888:8888
    volumes: *default_volumes
    profiles:
      - app-ssr
      - content-dev-front-ssr

  api_mock:
    image: api_mock
    build:
      context: .
      dockerfile: apimock/Dockerfile
      target: api-mock
    ports:
      - 9000:9000
    volumes: *default_volumes
    profiles:
      - front-test
      - widget-test
      - app-dev-mock

  app_make_test:
    <<: *ssr_service
    image: app_make_test
    ports:
      - 9009:3000
    volumes:
      - .:/home/app
      - /home/app/node_modules
      - /home/app/apps/front/node_modules
      - /home/app/apps/widget/node_modules
      - /home/app/package/api/node_modules
      - /home/app/package/components/node_modules
      - /home/app/package/types/node_modules
      - /home/app/package/assets/node_modules
      - /home/app/package/utils/node_modules
      - /home/app/package/ui/node_modules
      - /home/app/package/store/node_modules
      - /home/app/package/designsystem/node_modules
      - /home/app/package/logger/node_modules
      - /home/app/apimock/node_modules
      - /home/app/apps/front/dist
      - /home/app/apps/widget/dist
      - /home/app/dist
      - ./apps/front/.env.cypress:/home/app/apps/front/.env.local
    profiles:
      - front-test

  widget_make_dev:
    image: widget_make_dev
    build:
      context: .
      dockerfile: apps/widget/Dockerfile
      target: widget-dev
    ports:
      - 3000:3000
      - 8888:8888
    volumes: *default_volumes
    profiles:
      - widget-dev

  widget_make_ssr:
    &ssr_widget_service
    image: widget_make_ssr
    build:
      context: .
      dockerfile: apps/widget/Dockerfile
      target: widget-ssr
    ports:
      - 3000:3000
      - 8888:8888
    volumes: *default_volumes
    profiles:
      - widget-ssr

  widget_make_test:
    <<: *ssr_widget_service
    image: widget_make_test
    ports:
      - 9008:3000
      - 8888:8888
    volumes:
      - .:/home/app
      - /home/app/node_modules
      - /home/app/apps/front/node_modules
      - /home/app/apps/widget/node_modules
      - /home/app/package/api/node_modules
      - /home/app/package/components/node_modules
      - /home/app/package/types/node_modules
      - /home/app/package/assets/node_modules
      - /home/app/package/utils/node_modules
      - /home/app/package/ui/node_modules
      - /home/app/package/store/node_modules
      - /home/app/package/designsystem/node_modules
      - /home/app/package/logger/node_modules
      - /home/app/apimock/node_modules
      - /home/app/apps/front/dist
      - /home/app/apps/widget/dist
      - /home/app/dist
      - ./apps/widget/.env.cypress:/home/app/apps/widget/.env.local
    profiles:
      - widget-test

  translator_dev:
    image: translator_dev
    build:
      context: .
      dockerfile: apps/translator/Dockerfile
      target: app-dev
    ports:
      - 3000:3000
      - 8888:8888
    volumes: *default_volumes
    profiles:
      - translator-dev

  translator_prod:
    image: translator_prod
    build:
      context: apps/translator
      target: app-production
    ports:
      - 3000:8000
    volumes:
      - /usr/app/dist
      - /usr/app/node_modules
      - ./apps/translator/.env:/usr/app/.env
    profiles:
      - translator-prod

  content_dev:
    image: content_dev
    build:
      context: .
      dockerfile: apps/content/Dockerfile
      target: app-dev
    ports:
      - 3001:3000
    volumes: *default_volumes
    profiles:
      - content-dev
      - content-dev-front-ssr

  content_prod:
    image: content_prod
    build:
      context: .
      dockerfile: apps/content/Dockerfile
      target: app-production
    ports:
      - 3000:8000
    volumes:
      - /usr/app/dist
      - /usr/app/node_modules
      - ./apps/content/.env:/usr/app/.env
    profiles:
      - content-prod

  content_crdb:
    image: cockroachdb/cockroach:v22.1.15
    ports:
      - "26257:26257"
      - "8080:8080"
    command: start-single-node --insecure
    volumes:
      - "${PWD}/cockroach-data/crdb:/cockroach/cockroach-data"
    profiles:
      - content-prod
      - content-dev
      - content-dev-front-ssr

  assembly_dev:
    image: assembly_dev
    build:
      context: .
      dockerfile: apps/assembly/Dockerfile
      target: app-dev
    ports:
      - 3000:3000
      - 8888:8888
    volumes: *default_volumes
    profiles:
      - assembly-dev

  assembly_ssr:
    image: assembly_ssr
    build:
      context: .
      dockerfile: apps/assembly/Dockerfile
      target: app-ssr
    ports:
      - 3000:3000
      - 8888:8888
    volumes: *default_volumes
    profiles:
      - assembly-ssr
