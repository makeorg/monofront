/* eslint-disable import/no-extraneous-dependencies */
import yargs from 'yargs';
import { hideBin } from 'yargs/helpers';
import path from 'path';

class TrackingDocumentation {
  #configurationPath;

  #targetPath;

  #regReplacement =
    /<auto-generated-tracking-doc>([\s\S]*?)<\/auto-generated-tracking-doc>/g;

  constructor(configurationPath: string, targetPath: string) {
    this.#configurationPath = path.resolve(process.cwd(), configurationPath);
    this.#targetPath = path.resolve(process.cwd(), targetPath);
  }

  get() {
    return {
      conf: this.#configurationPath,
      target: this.#targetPath,
    };
  }
}

const {
  fix: optionFix,
  f: configurationPath,
  o: documentationPath,
} = yargs(hideBin(process.argv))
  .usage('Usage: $0 <command> [options]')
  .command('check', 'Check tracking documentation')
  .example('$0 check', 'Check tracking documentation is up to date')
  .option('fix', {
    describe: 'Update documentation',
    default: false,
    type: 'boolean',
  })
  .option('f', {
    describe: 'yaml configuration path',
    type: 'string',
  })
  .option('o', {
    describe: 'md documentation path',
    type: 'string',
  })
  .demandOption(['f', 'o'])
  .demandCommand(1)
  .help('h')
  .alias('h', 'help')
  .parseSync();

const trackingDocumentation = new TrackingDocumentation(
  configurationPath,
  documentationPath
);
console.log(optionFix, trackingDocumentation.get());
